{"version":3,"sources":["styles/global.js","pages/Main/styles.js","components/Container/index.js","pages/Main/index.js","App.js","index.js"],"names":["createGlobalStyle","SignContainer","styled","div","PdfContainer","rotate","keyframes","SignButton","button","attrs","props","type","disabled","loading","css","Container","Main","state","signing","pdf","sigPad","clear","trim","a","setState","trimmedDataURL","getTrimmedCanvas","toDataURL","PDFDocument","load","pdfDoc","embedPng","pngImage","pngDims","scale","getPages","forEach","page","drawImage","x","y","width","height","saveAsBase64","dataUri","pdfBytes","handleChange","e","reader","FileReader","file","target","files","onloadend","result","readAsDataURL","this","onChange","title","src","penColor","ref","onClick","color","size","Component","App","ReactDOM","render","document","getElementById"],"mappings":"orBAEeA,kBAAf,K,i/CCAO,IAAMC,EAAgBC,IAAOC,IAAV,KAmCbC,EAAeF,IAAOC,IAAV,KAgBnBE,EAASC,YAAH,KAUCC,EAAaL,IAAOM,OAAOC,OAAM,SAAAC,GAAK,MAAK,CACtDC,KAAM,SACNC,SAAUF,EAAMG,WAFQX,CAAH,KASnB,SAAAQ,GAAK,OACLA,EAAMG,SACNC,YADA,IAGiBT,M,oiBC1ErB,IA6BeU,EA7BGb,IAAOC,IAAV,KCYMa,E,2MACnBC,MAAQ,CACNC,SAAS,EACTC,IAAK,M,EAGPC,OAAS,G,EAETC,MAAQ,WACN,EAAKD,OAAOC,S,EAOdC,K,sBAAO,sCAAAC,EAAA,yDACGJ,EAAQ,EAAKF,MAAbE,IAER,EAAKK,SAAS,CAAEN,SAAS,IAEnBO,EAAiB,EAAKL,OACzBM,mBACAC,UAAU,cAETR,EATC,iCAUkBS,cAAYC,KAAKV,GAVnC,cAUGW,EAVH,gBAYoBA,EAAOC,SAASN,GAZpC,cAYGO,EAZH,OAaGC,EAAUD,EAASE,MAAM,KAEjBJ,EAAOK,WAEfC,SAAQ,SAAAC,GACZA,EAAKC,UAAUN,EAAU,CACvBO,EAAG,IACHC,EAAG,GACHC,MAAOR,EAAQQ,MACfC,OAAQT,EAAQS,YAtBjB,UA0BoBZ,EAAOa,aAAa,CAAEC,SAAS,IA1BnD,QA0BGC,EA1BH,OA6BH,EAAKrB,SAAS,CAAEL,IAAK0B,EAAU3B,SAAS,IA7BrC,wBA+BH,EAAKM,SAAS,CAAEN,SAAS,IA/BtB,4C,EAmCP4B,aAAe,SAAAC,GACb,IAAMC,EAAS,IAAIC,WACbC,EAAOH,EAAEI,OAAOC,MAAM,GAE5BJ,EAAOK,UAAY,WACjB,EAAK7B,SAAS,CAAEL,IAAK6B,EAAOM,UAG9BN,EAAOO,cAAcL,I,wEAGb,IAAD,SACkBM,KAAKvC,MAAtBC,EADD,EACCA,QAASC,EADV,EACUA,IAEjB,OACE,kBAAC,EAAD,KACE,4BACE,kBAAC,IAAD,MADF,iBAGE,2BAAOR,KAAK,OAAO8C,SAAUD,KAAKV,gBAGpC,kBAAC1C,EAAD,KACE,4BAAQsD,MAAM,UAAUC,IAAKxC,KAG/B,kBAAClB,EAAD,KACE,kBAAC,IAAD,CACE2D,SAAS,QACTC,IAAK,SAAAA,GACH,EAAKzC,OAASyC,KAGlB,6BACE,4BAAQlD,KAAK,SAASmD,QAASN,KAAKnC,MAAOT,SAAUM,GACnD,kBAAC,IAAD,CAAU6C,MAAM,OAAOC,KAAM,MAE/B,kBAACzD,EAAD,CAAYuD,QAASN,KAAKlC,KAAMT,QAASK,GACtCA,EACC,kBAAC,IAAD,CAAW6C,MAAM,OAAOC,KAAM,KAE9B,kBAAC,IAAD,CAAaD,MAAM,OAAOC,KAAM,a,GA5FdC,aCCnBC,MATf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCNNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f4fa8169.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  *{\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    min-height: 100%;\n  }\n\n  body {\n    background: #1A82CC;\n    -webkit-font-smoothing: antialiased !important;\n  }\n\n  body, input, button {\n    color: #222;\n    font-size: 14px;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import styled, { css, keyframes } from 'styled-components';\n\nexport const SignContainer = styled.div`\n  padding-top: 20px;\n  display: flex;\n  flex-direction: column;\n\n  canvas {\n    border: 3px solid #eee;\n    border-radius: 4px;\n    background: white;\n    width: 100%;\n    height: 100%;\n    padding: 3px;\n  }\n\n  div {\n    padding: 10px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n\n    button {\n      background: #1a82cc;\n      border: 0;\n      padding: 15px;\n      margin-left: 10px;\n      border-radius: 4px;\n\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n`;\n\nexport const PdfContainer = styled.div`\n  padding-top: 20px;\n  display: flex;\n  flex-direction: column;\n\n  iframe {\n    border: 3px solid #eee;\n    border-radius: 4px;\n    background: white;\n    width: 100%;\n    height: 100%;\n    min-height: 500px;\n    padding: 3px;\n  }\n`;\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const SignButton = styled.button.attrs(props => ({\n  type: 'button',\n  disabled: props.loading,\n}))`\n  &[disabled] {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  ${props =>\n    props.loading &&\n    css`\n      svg {\n        animation: ${rotate} 2s linear infinite;\n      }\n    `}\n`;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 700px;\n  background: #fff;\n  border-radius: 4px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n  padding: 30px;\n  margin: 80px auto;\n\n  h1 {\n    font-size: 20px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    svg {\n      margin-right: 10px;\n    }\n\n    input {\n      flex: 1;\n      border: 3px solid #eee;\n      margin-left: 10%;\n      padding: 10px 15px;\n      border-radius: 4px;\n      font-size: 16px;\n    }\n  }\n`;\n\nexport default Container;\n","import React, { Component } from 'react';\n\nimport { PDFDocument } from 'pdf-lib';\nimport SignatureCanvas from 'react-signature-canvas';\nimport {\n  FaPencilAlt,\n  FaEraser,\n  FaSpinner,\n  FaFileSignature,\n} from 'react-icons/fa';\n\nimport { SignContainer, PdfContainer, SignButton } from './styles';\nimport Container from '../../components/Container';\n\nexport default class Main extends Component {\n  state = {\n    signing: false,\n    pdf: null,\n  };\n\n  sigPad = {};\n\n  clear = () => {\n    this.sigPad.clear();\n  };\n\n  // sleep = ms => {\n  //   return new Promise(resolve => setTimeout(resolve, ms));\n  // };\n\n  trim = async () => {\n    const { pdf } = this.state;\n\n    this.setState({ signing: true });\n\n    const trimmedDataURL = this.sigPad\n      .getTrimmedCanvas()\n      .toDataURL('image/png');\n\n    if (pdf) {\n      const pdfDoc = await PDFDocument.load(pdf);\n\n      const pngImage = await pdfDoc.embedPng(trimmedDataURL);\n      const pngDims = pngImage.scale(0.17);\n\n      const pages = pdfDoc.getPages();\n\n      pages.forEach(page => {\n        page.drawImage(pngImage, {\n          x: 120,\n          y: 59,\n          width: pngDims.width,\n          height: pngDims.height,\n        });\n      });\n\n      const pdfBytes = await pdfDoc.saveAsBase64({ dataUri: true });\n\n      // await this.sleep(300);\n      this.setState({ pdf: pdfBytes, signing: false });\n    } else {\n      this.setState({ signing: false });\n    }\n  };\n\n  handleChange = e => {\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({ pdf: reader.result });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  render() {\n    const { signing, pdf } = this.state;\n\n    return (\n      <Container>\n        <h1>\n          <FaFileSignature />\n          PDF Signaturer\n          <input type=\"file\" onChange={this.handleChange} />\n        </h1>\n\n        <PdfContainer>\n          <iframe title=\"pdframe\" src={pdf} />\n        </PdfContainer>\n\n        <SignContainer>\n          <SignatureCanvas\n            penColor=\"black\"\n            ref={ref => {\n              this.sigPad = ref;\n            }}\n          />\n          <div>\n            <button type=\"button\" onClick={this.clear} disabled={signing}>\n              <FaEraser color=\"#fff\" size={14} />\n            </button>\n            <SignButton onClick={this.trim} loading={signing}>\n              {signing ? (\n                <FaSpinner color=\"#fff\" size={14} />\n              ) : (\n                <FaPencilAlt color=\"#fff\" size={14} />\n              )}\n            </SignButton>\n          </div>\n        </SignContainer>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\n// import Routes from './routes';\n\nimport GlobalStyle from './styles/global';\nimport Main from './pages/Main';\n\nfunction App() {\n  return (\n    <>\n      <Main />\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}